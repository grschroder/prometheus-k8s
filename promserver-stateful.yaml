apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: promsrv
  namespace: monitoring
  labels:
    app: promsrv
spec:
  serviceName: "promsrv"
  replicas: 1
  selector:
    matchLabels:
      app: promsrv
  template:
    metadata:
      labels:
        app: promsrv
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus
          resources: {}            
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/data/prometheus/"
            - "--storage.tsdb.retention.time=180d"
            - "--storage.tsdb.retention.size=180GB"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            
            - name: prometheus-storage-volume
              mountPath: /data/prometheus
          securityContext:
            runAsNonRoot: true
            runAsUser: 65534
      initContainers:
        - command:
          - chown
          - -R
          - 65534:65534
          - /data/prometheus
          image: docker.io/alpine:3.12
          imagePullPolicy: IfNotPresent
          name: chown
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data/prometheus
            name: prometheus-storage-volume    
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: promsrv
  
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prom-storage
            readOnly: false

        #- name: prometheus-storage-volume
        #  emptyDir: {}